<?xml version="1.0" encoding="UTF-8"?>
<ProcessList>
   <!---  NODAL PROCESSES -->
   <!---  Nodal Displacement, Acceleration -->

  <Process n="ApplyConstraintVectorDamTableProcess" pn="Impose vector value by components process" python_module="apply_constraint_vector_dam_table_process"
		kratos_module="KratosMultiphysics.DamApplication" help="This process fixes the selected components of a given vector variable">
    <inputs>
		    <parameter n="is_fixed" pn="Imposed" type="vector" vectorType="bool" v="1,1,1"/>
        <parameter n="value" pn="Value" type="vector" v="0.0,0.0,0.0"/>
        <parameter n="Value_Table" pn="Value table filename" type="vector" vectorType="tablefile" v=""/>
    </inputs>
  </Process>

   <!---  Uniform pressure -->
  <Process n="ImposeUniformPressureProcess" pn="Impose uniform value of pressure by process" python_module="impose_uniform_temperature_process"
		kratos_module="KratosMultiphysics.DamApplication" help="This process fixes the given scalar variable">
    <inputs>
		    <parameter n="is_fixed" pn="Imposed" type="bool" v="1"/>
        <parameter n="value" pn="Value" type="double" v="0.0"/>
        <parameter n="table" pn="Pressure table filename" type="tablefile" v=""/>
    </inputs>
  </Process>

   <!---  Uniform tempereature -->
  <Process n="ImposeUniformTemperatureProcess" pn="Impose uniform value of temperature by process" python_module="impose_uniform_temperature_process"
		kratos_module="KratosMultiphysics.DamApplication" help="This process fixes the given scalar variable">
    <inputs>
		    <parameter n="is_fixed" pn="Imposed" type="bool" v="1"/>
        <parameter n="value" pn="Value" type="double" v="0.0"/>
        <parameter n="table" pn="Uniform Temperature table filename" type="tablefile" v=""/>
    </inputs>
  </Process>

  <!---  Bofang Temperature -->
  <Process n="ImposeBofangConditionProcess" pn="Impose Bofang scalar field value" python_module="impose_reservoir_temperature_condition_process"
		kratos_module="KratosMultiphysics.DamApplication" help="This process fixes the given scalar variable">
    <inputs>
		<parameter n="is_fixed" pn="Imposed" type="bool" v="1"/>
        <parameter n="Gravity_Direction" pn="Gravity Direction" type="combo" v="Z" values="X,Y,Z" />
        <parameter n="Reservoir_Bottom_Coordinate_in_Gravity_Direction" pn="Reservoir Bottom Coordinate in Gravity Direction" type="double" v="0.0"/>
        <parameter n="Surface_Temp" pn="Surface Temperature" type="double" v="0.0"/>
        <parameter n="Bottom_Temp" pn="Bottom Temperature" type="double" v="0.0"/>
        <parameter n="Height_Dam" pn="Height Dam" type="double" v="0.0"/>
        <parameter n="Temperature_Amplitude" pn="Temperature Amplitude" type="double" v="0.0"/>
        <parameter n="Day_Ambient_Temp" pn="Day" type="integer" v="0.0"/>
        <parameter n="Water_level" pn="Water Level" type="double" v="0.0"/>
        <parameter n="Water_level_Table" pn="Water Level table filename" type="tablefile" v=""/>
        <parameter n="Month" pn="Month" type="double" v="0.0"/>
        <parameter n="Month_Table" pn="Month table filename" type="tablefile" v=""/>
    </inputs>
  </Process>

    <!---  Constant Reservoir Temperature -->
  <Process n="ImposeReservoirConstantTemperatureConditionProcess" pn="Impose constant reservoir temperature value" python_module="impose_reservoir_temperature_condition_process"
		kratos_module="KratosMultiphysics.DamApplication" help="This process fixes the given scalar variable">
    <inputs>
        <parameter n="is_fixed" pn="Imposed" type="bool" v="1"/>
        <parameter n="Gravity_Direction" pn="Gravity Direction" type="combo" v="Z" values="X,Y,Z" />
        <parameter n="Reservoir_Bottom_Coordinate_in_Gravity_Direction" pn="Reservoir Bottom Coordinate in Gravity Direction" type="double" v="0.0"/>
        <parameter n="Water_temp" pn="Water Temperature" type="double" v="0.0"/>
        <parameter n="Water_temp_Table" pn="Water Temperarure table filename" type="tablefile" v=""/>
        <parameter n="Water_level" pn="Water Level" type="double" v="0.0"/>
        <parameter n="Water_level_Table" pn="Water Level table filename" type="tablefile" v=""/>
    </inputs>
  </Process>

    <!---  Monitoring Reservoir Temperature -->
  <Process n="ImposeReservoirMonitoringTemperatureConditionProcess" pn="Impose constant reservoir temperature value" python_module="impose_reservoir_temperature_condition_process"
		kratos_module="KratosMultiphysics.DamApplication" help="This process fixes the given scalar variable">
    <inputs>
        <parameter n="is_fixed" pn="Imposed" type="bool" v="1"/>
        <parameter n="Gravity_Direction" pn="Gravity Direction" type="combo" v="Z" values="X,Y,Z" />
        <parameter n="Reservoir_Bottom_Coordinate_in_Gravity_Direction" pn="Reservoir Bottom Coordinate in Gravity Direction" type="double" v="0.0"/>
        <parameter n="Height_Dam" pn="Height Dam" type="double" v="0.0"/>
        <parameter n="Ambient_temp" pn="Ambient temperature" type="double" v="0.0"/>
        <parameter n="Ambient_temp_Table" pn="Ambient temperature table filename" type="tablefile" v="" />
        <parameter n="Water_level" pn="Water Level" type="double" v="0.0"/>
        <parameter n="Water_level_Table" pn="Water level table filename" type="tablefile" v=""/>
        <parameter n="Z_Coord_1" pn="Z-Coordinate of thermometer #1" type="double" v="0.0"/>
        <parameter n="Water_temp_1" pn="Water temperature of thermometer #1" type="double" v="0.0"/>
        <parameter n="Water_temp_Table_1" pn="Table filename thermometer #1" type="tablefile" v=""/>
        <parameter n="Z_Coord_2" pn="Z-Coordinate of thermometer #2" type="double" v="0.0"/>
        <parameter n="Water_temp_2" pn="Water temperature of thermometer #2" type="double" v="0.0"/>
        <parameter n="Water_temp_Table_2" pn="Table filename thermometer #2" type="tablefile" v=""/>
        <parameter n="Z_Coord_3" pn="Z-Coordinate of thermometer #3" type="double" v="0.0"/>
        <parameter n="Water_temp_3" pn="Water temperature of thermometer #3" type="double" v="0.0"/>
        <parameter n="Water_temp_Table_3" pn="Table filename thermometer #3" type="tablefile" v=""/>
    </inputs>
  </Process>

   <!---  Thermal Parameters -->
  <Process n="ImposeThermalParametersScalarValueProcess" pn="Impose thermal parameters for solving the thermal problem" python_module="impose_thermal_parameters_scalar_value_process"
		kratos_module="KratosMultiphysics.DamApplication" help="This process fixes the given scalar variable">
    <inputs>
        <parameter n="ThermalDensity" pn="Density" type="double" v="2400" help="Kg/m3"/>
        <parameter n="Conductivity" pn="Conductivity" type="double" v="1.0" help="W/(mºC)"/>
        <parameter n="SpecificHeat" pn="Specific Heat" type="double" v="1000.0" help="J/(KgºC)"/>
    </inputs>
  </Process>

  <!---  Noorzai Heat Source -->
  <Process n="NoorzaiHeatSourceProcess" pn="Impose Noorzai Heat Source law" python_module="impose_heat_source_process"
		kratos_module="KratosMultiphysics.DamApplication" help="This process provides a heat source field according Noorzai formulation">
    <inputs>
        <parameter n="density" pn="Density" type="double" v="2400.0" help="Kg/m3"/>
        <parameter n="specific_heat" pn="Specific Heat" type="double" v="1000.0" help="J/(KgºC)"/>
        <parameter n="t_max" pn="T Max" type="double" v="18.0" help="The maximum temperature of concrete under adiabatic condition (ºC)"/>
        <parameter n="beta" pn="Beta coefficient" type="double" v="8.47e-6" help="1/s"/>
    </inputs>
  </Process>

    <!---  Azenha Heat Source -->
  <Process n="AzenhaHeatSourceProcess" pn="Impose Azenha Heat Source law" python_module="impose_heat_source_process"
		kratos_module="KratosMultiphysics.DamApplication" help="This process provides a heat source field according Azenha formulation">
    <inputs>
        <parameter n="activation_energy" pn="Activation Energy" type="double" v="45507.0" help="J/mol"/>
        <parameter n="gas_constant" pn="Universal Constant" type="double" v="8.314472" help="J/(mol ºC)"/>
        <parameter n="constant_rate" pn="Constant Rate" type="double" v="7.2237e10" help="W/m^3"/>
        <parameter n="alpha_initial" pn="Initial Alpha" type="double" v="0.015" />
        <parameter n="aging" pn="Consider Aging" type="bool" v="No" values="Yes,No" />
        <parameter n="young_inf" pn="Final Young Modulus" type="double" v="2.0e10"/>
        <parameter n="q_total" pn="Q Total" type="double" v="6.7939e7" help="J/m^3"/>
        <parameter n="A" pn="First Factor" type="double" v="0.4" />
        <parameter n="B" pn="Second Factor" type="double" v="6.9" />
        <parameter n="C" pn="Third Factor" type="double" v="18.8" />
        <parameter n="D" pn="Fourth Factor" type="double" v="7.0" />
    </inputs>
  </Process>

  <!---  Uniform Heat FLuxes -->
  <Process n="ImposeUniformHeatFluxes" pn="Impose uniform value of heat fluxes" python_module="impose_face_heat_flux_process"
		kratos_module="KratosMultiphysics.DamApplication" help="This process fixes the given scalar variable">
    <inputs>
        <parameter n="value" pn="Value" type="double" v="0.0" help="W/m^2"/>
        <parameter n="table" pn="Uniform Heat Fluxes table filename" type="tablefile" v=""/>
    </inputs>
  </Process>

   <!---  Heat Fluxes T Air -->
  <Process n="ImposeTAmbientHeatFluxProcess" pn="Impose heat flux according to t_air formulation" python_module="impose_face_heat_flux_process"
		kratos_module="KratosMultiphysics.DamApplication" help="This process fixes the given scalar variable">
    <inputs>
        <parameter n="h_0" pn="Heat transfer coefficient" type="double" v="3.5" help="W/(m^2 ºC)"/>
        <parameter n="ambient_temperature" pn="Ambient Temperature" type="double" v="10.0" help="ºC"/>
        <parameter n="table_ambient_temperature" pn="Ambient Temperature Table" type="tablefile" v="" />
    </inputs>
  </Process>

   <!---  Heat Fluxes T Sol Air -->
  <Process n="ImposeTSolAirHeatFluxProcess" pn="Impose heat flux according to t_sol_air formulation" python_module="impose_face_heat_flux_process"
		kratos_module="KratosMultiphysics.DamApplication" help="This process fixes the given scalar variable">
    <inputs>
        <parameter n="h_0" pn="Heat transfer coefficient" type="double" v="3.5" help="W/(m^2 ºC)"/>
        <parameter n="ambient_temperature" pn="Ambient Temperature" type="double" v="10.0" help="ºC" />
        <parameter n="table_ambient_temperature" pn="Ambient Temperature Table" type="tablefile" v="" />
        <parameter n="emisivity" pn="Emisivity" type="double" v="0.7"/>
        <parameter n="delta_R" pn="Delta R" type="double" v="1.0" help="W/m^2" />
        <parameter n="absorption_index" pn="Absorption Index" type="double" v="0.2" />
        <parameter n="total_insolation" pn="Total Insolation" type="double" v="300.0" help="W/m^2"/>
    </inputs>
  </Process>

<!--- CONDITION PROCESSES -->
<!---  Point Loads Selfweight -->
  <Process n="ApplyLoadVectorDamProcess" pn="Constant vector value" python_module="apply_load_vector_dam_process"
		kratos_module="KratosMultiphysics.DamApplication" help="This process sets a vector variable value over a condition" check="DirectorVectorNonZero direction">
    <inputs>
      <parameter n="modulus" pn="Modulus" type="double" v="1.0"/>
      <parameter n="direction" pn="Direction" type="vector" v="0.0,0.0,0.0" />
    </inputs>
  </Process>

<!---  Line Loads & Surface Loads Selfweight -->
  <Process n="ApplyLoadVectorDamProcess" pn="Constant vector value" python_module="apply_load_vector_dam_process"
		kratos_module="KratosMultiphysics.DamApplication" help="This process sets a vector variable value over a condition" check="DirectorVectorNonZero direction">
    <inputs>
        <parameter n="modulus" pn="Modulus" type="double"  v="1.0"/>
        <parameter n="direction" pn="Direction" type="vector" v="0.0,0.0,0.0" unit_magnitude="0" units="0" />
    </inputs>
  </Process>

<!---  Point Loads -->
  <Process n="ApplyLoadVectorDamTableProcess" pn="Constant vector value" python_module="apply_load_vector_dam_table_process"
		kratos_module="KratosMultiphysics.DamApplication" check="DirectorVectorNonZero direction">
    <inputs>
      <parameter n="modulus" pn="Modulus" type="double" v="1.0"/>
      <parameter n="direction" pn="Direction" type="vector" v="0.0,0.0,0.0" />
      <parameter n="table" pn="Value table filename" type="tablefile" v=""/>
    </inputs>
  </Process>

<!---  Line Loads & Surface Loads -->
  <Process n="ApplyLoadVectorDamTableProcess" pn="Apply a vector value over a condition" python_module="apply_load_vector_dam_table_process"
		kratos_module="KratosMultiphysics.DamApplication" help="This process sets a vector variable value over a condition" check="DirectorVectorNonZero direction">
    <inputs>
        <parameter n="modulus" pn="Modulus" type="double"  v="1.0"/>
        <parameter n="direction" pn="Direction" type="vector" v="0.0,0.0,0.0" unit_magnitude="0" units="0" />
        <parameter n="table" pn="Value table filename" type="tablefile" v=""/>
    </inputs>
  </Process>

<!--- Normal Loads -->
  <Process n="ApplyLoadScalarTableProcess" pn="Apply a scalar value over a condition" python_module="apply_load_scalar_table_process"
		kratos_module="KratosMultiphysics.SolidMechanicsApplication" help="This process sets a scalar variable value over a condition" >
    <inputs>
        <parameter n="value" pn="Value" type="double" v="0.0" />
        <parameter n="table" pn="Value table filename" type="tablefile" v=""/>
    </inputs>
  </Process>

<!--- Hydrostatic Loads -->
  <Process n="HydrostaticConditionsProcess" pn="Apply a scalar value over a condition" python_module="impose_water_loads_condition_process"
		kratos_module="KratosMultiphysics.DamApplication" help="This process sets a scalar variable value over a condition" >
    <inputs>
        <parameter n="Modify" pn="Modify" type="bool" v="1"/>
        <parameter n="Gravity_Direction" pn="Gravity Direction" type="combo" v="Z" values="X,Y,Z"/>
        <parameter n="Reservoir_Bottom_Coordinate_in_Gravity_Direction" pn="Reservoir Bottom Coordinate in Gravity Direction" type="double" v="0.0"/>
        <parameter n="Spe_weight" pn="Specific Weight" type="double" v="9810"/>
        <parameter n="Water_level" pn="Water Level" type="double" v="0.0"/>
        <parameter n="Water_Table" pn="Water Level table filename" type="tablefile" v=""/>
    </inputs>
  </Process>

  <!--- Hydrodynamic Loads -->
  <Process n="HydrodynamicConditionsProcess" pn="Apply a scalar value over a condition" python_module="impose_water_loads_condition_process"
		kratos_module="KratosMultiphysics.DamApplication" help="This process sets a scalar variable value over a condition" >
    <inputs>
        <parameter n="Modify" pn="Modify" type="bool" v="1"/>
        <parameter n="Gravity_Direction" pn="Gravity Direction" type="combo" v="Z" values="X,Y,Z"/>
        <parameter n="Reservoir_Bottom_Coordinate_in_Gravity_Direction" pn="Reservoir Bottom Coordinate in Gravity Direction" type="double" v="0.0"/>
        <parameter n="Spe_weight" pn="Specific Weight" type="double" v="9810"/>
        <parameter n="Water_level" pn="Water Level" type="double" v="0.0"/>
        <parameter n="Water_Table" pn="Water Level table filename" type="tablefile" v=""/>
        <parameter n="Aceleration" pn="Aceleration" type="double" v="0.0"/>
        <parameter n="Aceleration_Table" pn="Aceleration Level table filename" type="tablefile" v=""/>
    </inputs>
  </Process>

<!--- Uplift Loads -->
  <Process n="UpliftConditionsProcess" pn="Apply a scalar value over a condition" python_module="impose_water_loads_condition_process"
		kratos_module="KratosMultiphysics.DamApplication" help="This process sets a scalar value according its law over a condition" >
    <inputs>
        <parameter n="Modify" pn="Modify" type="bool" v="1"/>
        <parameter n="Joint_Group_Name" pn="Joint Group Name" type="combo" v="0"/>
        <parameter n="Gravity_Direction" pn="Gravity Direction" type="combo" v="Z" values="X,Y,Z"/>
        <parameter n="Reservoir_Bottom_Coordinate_in_Gravity_Direction" pn="Reservoir Bottom Coordinate in Gravity Direction" type="double" v="0.0"/>
        <parameter n="Upstream_Coordinate" pn="Upstream Coordinate" type="inline_vector" vectorType="double" function="0" v="0.0,0.0,0.0"/>
        <parameter n="Downstream_Coordinate" pn="Downstream Coordinate" type="inline_vector" vectorType="double" function="0" v="0.0,0.0,0.0"/>
        <parameter n="Upstream_Longitudinal_Coordinate" pn="Upstream Longitudinal Coordinate" type="inline_vector" vectorType="double" function="0" v="0.0,0.0,1.0"/>
        <parameter n="Spe_weight" pn="Specific Weight" type="double" v="9810"/>
        <parameter n="Water_level" pn="Water Level" type="double" v="0.0"/>
        <parameter n="Water_Table" pn="Water Level table filename" type="tablefile" v=""/>
        <parameter n="Drains" pn="Drains" un="DamDrains" type="bool" v="0"/>
        <parameter n="Height_drain" pn="Height of Drain" type="double" v="0.0"/>
        <parameter n="Distance" pn="Distance of Drain" type="double" v="0.0"/>
        <parameter n="Effectiveness" pn="Effectivesness" type="double" v="0.0"/>
    </inputs>
  </Process>

  <Process n="CircularUpliftConditionsProcess" pn="Apply a scalar value over a condition for arc dams" python_module="impose_water_loads_condition_process"
		kratos_module="KratosMultiphysics.DamApplication" help="This process sets a scalar value according its law over a condition" >
    <inputs>
        <parameter n="Modify" pn="Modify" type="bool" v="1"/>
        <parameter n="Joint_Group_Name" pn="Joint Group Name" type="combo" v="0"/>
        <parameter n="Gravity_Direction" pn="Gravity Direction" type="combo" v="Z" values="X,Y,Z" />
        <parameter n="Reservoir_Bottom_Coordinate_in_Gravity_Direction" pn="Reservoir Bottom Coordinate in Gravity Direction" type="double" v="0.0"/>
        <parameter n="Upstream_Coordinate_first_bracket" pn="Upstream Coordinate First Bracket" type="inline_vector" vectorType="double" function="0" v="0.0,0.0,0.0"/>
        <parameter n="Downstream_Coordinate_first_bracket" pn="Downstream Coordinate First Bracket" type="inline_vector" vectorType="double" function="0" v="0.0,0.0,0.0"/>
        <parameter n="Focus" pn="Focus" type="inline_vector" vectorType="double" function="0" v="0.0,0.0,0.0"/>
        <parameter n="Spe_weight" pn="Specific Weight" type="double" v="9810"/>
        <parameter n="Water_level" pn="Water Level" type="double" v="0.0"/>
        <parameter n="Water_Table" pn="Water Level table filename" type="tablefile" v=""/>
        <parameter n="Drains" pn="Drains" un="DamDrains" type="bool" v="0"/>
        <parameter n="Height_drain" pn="Height of Drain" type="double" v="0.0"/>
        <parameter n="Distance" pn="Distance of Drain" type="double" v="0.0"/>
        <parameter n="Effectiveness" pn="Effectivesness" type="double" v="0.0"/>
    </inputs>
  </Process>

<!---  Added Mass Condition -->
  <Process n="AddedMassProcess" pn="Adding an extra mass due to reservoir effects" python_module="impose_water_loads_condition_process"
   kratos_module="KratosMultiphysics.DamApplication" help="" >
    <inputs>
		    <parameter n="Modify" pn="Modify" type="bool" v="1"/>
        <parameter n="Gravity_Direction" pn="Gravity Direction" type="combo" v="Z" values="X,Y,Z"/>
        <parameter n="Reservoir_Bottom_Coordinate_in_Gravity_Direction" pn="Reservoir Bottom Coordinate in Gravity Direction" type="double" v="0.0"/>
        <parameter n="Spe_weight" pn="Specific Weight" type="double" v="10000"/>
        <parameter n="Water_level" pn="Water Level" type="double" v="0.0"/>
    </inputs>
  </Process>

<!---  Chemo-Mechanical Aging Condition -->
  <Process n="ImposeChemoMechanicalAgingYoungProcess" pn="Evolution of young modulus according to chemo-mechanical degradation" python_module="impose_chemo_mechanical_aging_process"
   kratos_module="KratosMultiphysics.DamApplication" help="" >
    <inputs>
		    <parameter n="initial_elastic_modulus" pn="Initial Elastic Modulus" type="double" v="30.0e9"/>
		    <parameter n="initial_porosity" pn="Initial Porosity" type="double" v="0.2"/>
		    <parameter n="max_chemical_porosity" pn="Max Chemical Porosity" type="double" v="0.32"/>
		    <parameter n="chemical_characteristic_aging_time" pn="Chemical Aging time" type="double" v="100.0"/>
		    <parameter n="max_mechanical_damage" pn="Max Mechanical Damage" type="double" v="0.32"/>
		    <parameter n="damage_characteristic_aging_time" pn="Damage Aging time" type="double" v="100.0"/>
    </inputs>
  </Process>

<!---  ACOUSTIC CONDITION PROCESSES -->
<!---  Free Surface -->
  <Process n="FreeSurfaceProcess" pn="Apply the second derivative of pressure" python_module="special_condition_process"
		kratos_module="KratosMultiphysics.DamApplication" help="" >
    <inputs>
    </inputs>
  </Process>

  <Process n="InfiniteDomainProcess" pn="Apply the first derivative of pressure" python_module="special_condition_process"
		kratos_module="KratosMultiphysics.DamApplication" help="" >
    <inputs>
    </inputs>
  </Process>

  <Process n="InterfaceDomainProcess"  pn="Apply the UP condition" python_module="special_condition_process"
		kratos_module="KratosMultiphysics.DamApplication" help="" >
    <inputs>
    </inputs>
  </Process>

<!---  YOUNG VARIABLE PROCESS -->
  <Process n="Impose3dRandomFieldsVariableProcess" pn="Distrubuted Young Modulus" python_module="impose_3d_random_fields_variable_process"
		kratos_module="KratosMultiphysics.DamApplication" help="This process assigns different values of Young Modulus according to a Gaussian random field with exponential covariance distribution" >
    <inputs>
        <parameter n="mean_value" pn="Mean Value" type="double" v="0.0"/>
        <parameter n="min_value" pn="Minimum Value" type="double" v="0.0"/>
        <parameter n="max_value" pn="Maximum Value" type="double" v="0.0"/>
        <parameter n="variance" pn="Variance" type="double" v="0.0"/>
        <parameter n="corr_length" pn="Correlation Length" type="integer" v="0"/>
    </inputs>
  </Process>

  <Process n="Impose2dRandomFieldsVariableProcess" pn="Distrubuted Young Modulus" python_module="impose_2d_random_fields_variable_process"
		kratos_module="KratosMultiphysics.DamApplication" help="This process assigns different values of Young Modulus according to a Gaussian random field with exponential covariance distribution" >
    <inputs>
        <parameter n="mean_value" pn="Mean Value" type="double" v="0.0"/>
        <parameter n="min_value" pn="Minimum Value" type="double" v="0.0"/>
        <parameter n="max_value" pn="Maximum Value" type="double" v="0.0"/>
        <parameter n="variance" pn="Variance" type="double" v="0.0"/>
        <parameter n="corr_length" pn="Correlation Length" type="integer" v="0"/>
    </inputs>
  </Process>

<!---  NODAL_REFERENCE_TEMPERATURE_PROCESS -->
  <Process n="ImposeNodalReferenceTemperatureProcess" pn="Variable Reference Temperature" python_module="impose_nodal_reference_temperature_process"
		kratos_module="KratosMultiphysics.DamApplication" help="This process assigns different values of Reference Temperature to each node" >
    <inputs>
        <parameter n="initial_value" pn="Initial Reference Temperature Value" type="double" v="0.0"/>
        <parameter n="input_file_name" pn="Table filename" type="file" v="- No file - (add files using File handler toolbar)"/>
    </inputs>
  </Process>

  <!---  GROUTING_REFERENCE_TEMPERATURE_PROCESS -->
  <Process n="ImposeGroutingReferenceTemperatureProcess" pn="Grouting Reference Temperature" python_module="impose_grouting_reference_temperature_process"
		kratos_module="KratosMultiphysics.DamApplication" help="This process assigns different a Reference Temperature at the Grouting time according to the resulting temperature at such step" >
    <inputs>
        <parameter n="initial_value" pn="Initial Reference Temperature Value" type="double" v="0.0"/>
        <parameter n="time_grouting" pn="Grouting time" type="double" v="0.0"/>
    </inputs>
  </Process>

</ProcessList>
