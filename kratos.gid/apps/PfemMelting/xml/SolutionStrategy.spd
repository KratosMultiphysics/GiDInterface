<?xml version="1.0" encoding="utf-8"?>
<container n="SolStrat" pn="General settings" un="DEMStratSection" icon="analysis" open_window="0">
	<include n="Gravity" active="1" path="apps/Buoyancy/xml/Gravity.spd"/>
	<container n="Boundingbox"      un="Boundingbox" pn="Bounding box" help="Define bounding box options for the simulation" icon="bbox" open_window="0">
                <value n="UseBB"          type="bool"     pn="Bounding box"           values="true,false" v="false"  icon="black1"  help="True: Particles outside the delimited area will be deleted" update_proc="spdAux::RequestRefresh" />
                <value n="AutomaticBB"    type="bool"     pn="Automatic size"         values="true,false" state="[getStateFromXPathValue {string(../value[@n='UseBB']/@v)} true]" v="false"    icon="black1" help="The bounding box is calculated automatically" update_proc="spdAux::RequestRefresh" />
                <value n="PostBB"         type="bool"     pn="Print bounding box"     values="true,false" state="[getStateFromXPathValue {string(../value[@n='UseBB']/@v)} true]" v="false"  icon="black1" />
                <value n="BBFactor"       v="1.1"         pn="Factor"                                     state="[getStateFromXPathValue {string(../value[@n='AutomaticBB']/@v)} true]"   icon="black1" help="Enlargement factor for the dynamic bounding box"/>
                <value n="PeriodicDomain" type="bool"     pn="Use as periodic domain" values="true,false" state="[getStateFromXPathValue {string(../value[@n='UseBB']/@v)} true]"           v="false"  icon="black1"  help="Consider a parallepipedic periodic domain defined by the bounding box for the Buoyancy problem"/>
                <value n="StartTime"      v="0.0"         pn="Start time"                                 state="[getStateFromXPathValue {string(../value[@n='UseBB']/@v)} true]"      icon="black1" help="Time at which the bounding box gets active."/>
                <value n="StopTime"       v="1000.0"      pn="Stop time"                                  state="[getStateFromXPathValue {string(../value[@n='UseBB']/@v)} true]"      icon="black1" help="Time at which the bounding box stops acting."/>
                <value n="MaxX"           v="10"          pn="Max X"                                      state="[getStateBoundingBoxParams]"  icon="black1" help="Max X"/>
                <value n="MaxY"           v="10"          pn="Max Y"                                      state="[getStateBoundingBoxParams]"  icon="black1" help="Max Y"/>
                <value n="MaxZ"           v="10"          pn="Max Z"                                      state="[getStateBoundingBoxParams]"  icon="black1" help="Max Z"/>
                <value n="MinX"           v="-10"         pn="Min X"                                      state="[getStateBoundingBoxParams]"  icon="black1" help="Min X"/>
                <value n="MinY"           v="-10"         pn="Min Y"                                      state="[getStateBoundingBoxParams]"  icon="black1" help="Min Y"/>
                <value n="MinZ"           v="-10"         pn="Min Z"                                      state="[getStateBoundingBoxParams]"  icon="black1" help="Min Z"/>
        </container>

	<container     n="TimeParameters"               un="DEMTimeParameters"  pn="Time parameters"    icon="time4" open_window="0">
                <value n="StartTime"                    v="0.0"                 pn="Start time"         icon="black1" help="Simulation start time"/>
                <value n="EndTime"                      v="1.0"                 pn="End time"           icon="black1" help="Simulation end time"/>
                <value n="DeltaTime"                    v="1e-6"                pn="Delta time"         icon="black1" help="Simulation time step value"/>
                <value n="ScreenInfoOutput"             v="5"                   pn="Info screen output" icon="black1" help="Interval to deliver onscreen information on the running process (in seconds)"/>
                <value n="NeighbourSearchFrequency"     v="50"                  pn="Search frequency"   icon="black1" help="Search for new particle or wall neighbours. Set its value to '10': a single search will be computed out every ten steps"/>
	</container>
	<include n="Parallelism" active="1" path="apps/Common/xml/Parallelism.spd"/>
	<dynamicnode command="spdAux::injectSolvers" args=""/>
        <container n="AdvOptions"                               un="AdvOptions" pn="Advanced settings"                    help="Extra settings for particle problems" icon="solver">
                <value n="DeltaOption"                          type="bool"     pn="Bond creation method"                 values="Absolute,Coordination_Number"       v="Absolute" icon="black1" help="Absolute method: create bonds between particles closer than a fixed a distance value. Coordination number method: The program will iterate until an average number of contacts per particle is achieved."/>
                    <value n="TangencyAbsoluteTolerance"        v="0.0001"      pn="Tangency tolerance value"             icon="black1"                               help="Fixed a distance value" state="[getStateFromXPathValue {string(../value[@n='DeltaOption']/@v)} Absolute]" update_proc="spdAux::RequestRefresh" />
                    <value n="TangencyCoordinationNumber"       v="10"          pn="Coordination number"                  icon="black1"                               help="Average number of expected bonds." state="[getStateFromXPathValue {string(../value[@n='DeltaOption']/@v)} Coordination_Number]" update_proc="spdAux::RequestRefresh" />
                <value n="PoissonEffect"                        type="bool"     pn="Poisson effect"                       values="true,false" v="false" icon="black1" help="Activate to accurately simulate Poisson deformations"/>
                <value n="ShearStrainParallelToBondEffect"      type="bool"     pn="Shear strain parallel effect"         values="true,false" v="false" icon="black1" help="Activate to consider strain caused by shear"/>
                <value n="ComputeStressTensorOption"            type="bool"     pn="Compute stress tensor"                values="true,false" v="false" icon="black1" help="Activate to calculate the stress tensor on particles"/>
                <value n="CleanIndentations"                    type="bool"     pn="Clean initial indentations:particles" values="true,false" v="false" icon="black1" help="Activate to avoid instability caused by initially indented particles"/>
                <value n="RemoveParticlesInWalls"               type="bool"     pn="Clean initial indentations:walls"     values="true,false" v="false" icon="black1" help="Activate to avoid instability caused by initially indented particles against finite elements"/>
                <value n="CalculateRotations"                   type="bool"     pn="Calculate rotations"                  values="true,false" v="true"  icon="black1" help="Activate to consider torques and rotations on the particles. This option will slightly increase computation times."/>
                <value n="RollingFriction"                      type="bool"     pn="Rolling friction"                     values="true,false" v="false" icon="black1" help="Activate to consider the rolling friction parameter set in the properties. Otherwise it will be ignored."/>
                <value n="VirtualMassCoef"                      v="1.0"         pn="Virtual mass coefficient"             icon="black1"                               help="Alterate particle mass set in the simulation"/>
                <value n="GlobalDamping"                        v="0.0"         pn="Global damping"                       icon="black1"                               help="Choose the value for the damping. Set it to 1.0 for maximum energy dissipation."/>
                <value n="AmplifiedSearchRadius"                v="1.1"         pn="AmplifiedSearchRadius"                icon="black1" state="hidden" />
                <!-- <value n="NeighbourSearchAcceptedGap"          v="1.0"             pn="NeighbourSearchAcceptedGap" icon="black1"/> -->
                <value n="SearchTolerance"                      v="0.001"       pn="Search tolerance"                     icon="black1"                               help="Minimum tolerance to avoid initial overlaps"/>
        </container>
        <container     n="TestMaterial"                 un="DEMTestMaterial"    pn="Material Analysis"    help="Testing specimens under certain pressure conditions" icon="black1" open_window="0">
                <value n="Active"                       v="false" type="bool"   pn="Activate"             values="true,false" icon="black1"/>
                <value n="TestType"                     v="UCS"                 pn="Select test type"     state="[getStateFromXPathValue {string(../value[@n='Active']/@v)} true]" update_proc="spdAux::RequestRefresh" values="UCS,Triaxial,Oedometric,Hydrostatic,BTS,Shear" icon="black1"/>
                <value n="ConfinementPressure"          v="0.0"                 pn="Confinement pressure" state="[getStateFromXPathValue {string(../value[@n='Active']/@v)} true]" update_proc="spdAux::RequestRefresh" icon="black1"/>
                <value n="LoadVelocity"                 v="0.1"                 pn="Loading speed"        state="[getStateFromXPathValue {string(../value[@n='Active']/@v)} true]" update_proc="spdAux::RequestRefresh" icon="black1" help="Total loading speed defined as the sum of top and bottom loading speeds"/>
                <value n="Meshtype"                     v="Current"             pn="Select mesh type"     state="[getStateFromXPathValue {string(../value[@n='Active']/@v)} true]" update_proc="spdAux::RequestRefresh" values="Current,Predefined" icon="black1"/>
                <value n="Specimenlength"               v="0.30"                pn="Length"               state="[getStateFromXPathValue {string(../value[@n='Active']/@v)} true]" update_proc="spdAux::RequestRefresh" icon="black1"/>
                <value n="Specimendiameter"             v="0.15"                pn="Diameter"             state="[getStateFromXPathValue {string(../value[@n='Active']/@v)} true]" update_proc="spdAux::RequestRefresh" icon="black1"/>
        </container>
</container>
